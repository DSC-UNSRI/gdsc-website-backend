// Code generated by MockGen. DO NOT EDIT.
// Source: ./init.go

// Package mock_member is a generated GoMock package.
package mock_member

import (
	reflect "reflect"

	model "github.com/DSC-UNSRI/gdsc-website-backend/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockMemberUsecase is a mock of MemberUsecase interface.
type MockMemberUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockMemberUsecaseMockRecorder
}

// MockMemberUsecaseMockRecorder is the mock recorder for MockMemberUsecase.
type MockMemberUsecaseMockRecorder struct {
	mock *MockMemberUsecase
}

// NewMockMemberUsecase creates a new mock instance.
func NewMockMemberUsecase(ctrl *gomock.Controller) *MockMemberUsecase {
	mock := &MockMemberUsecase{ctrl: ctrl}
	mock.recorder = &MockMemberUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMemberUsecase) EXPECT() *MockMemberUsecaseMockRecorder {
	return m.recorder
}

// CreateMember mocks base method.
func (m *MockMemberUsecase) CreateMember(arg0 model.CreateMemberRequest) model.WebServiceResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMember", arg0)
	ret0, _ := ret[0].(model.WebServiceResponse)
	return ret0
}

// CreateMember indicates an expected call of CreateMember.
func (mr *MockMemberUsecaseMockRecorder) CreateMember(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMember", reflect.TypeOf((*MockMemberUsecase)(nil).CreateMember), arg0)
}
